@page "/PullRequest"
@inject NavigationManager NavManager
@inject GitService GitService
@inject IUserPreferenceRepository UserSettings;

@if (Error != null)
{
    <ul class="list-group mb-3">
        <li class="list-group-item list-group-item-danger">@Error</li>
    </ul>
}

<div class="row">
    <div class="col-md-6">
        <h3>@(PullRequestModel?.Title ?? "Pull Request page")</h3>
    </div>
</div>

@if (PullRequestModel != null && Comments != null)
{
    foreach (var item in Comments)
    {
        <MudCard>
            <MudCardContent>
                @foreach (var comment in item.Comments)
                {
                    <MudText>@comment.Author.DisplayName</MudText>
                    <MudText>@comment.Content</MudText>
                }
            </MudCardContent>
        </MudCard>
    }

    if (Comments.Count == 0)
    {
        <p>There is no comments in this PR yet.</p>
    }
}

@code {
    public string? Error { get; set; }

    public Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest? PullRequestModel { get; set; }

    public List<Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequestCommentThread>? Comments { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("pullrequest", out var pullRequestUrl))
        {
            var (pr, error) = await GitService.GetPullRequest(pullRequestUrl);

            PullRequestModel = pr;
            Error = error;

            if (pr != null)
            {
                await GetComments(pr);
            }
        }
    }

    private async Task GetComments(Microsoft.TeamFoundation.SourceControl.WebApi.GitPullRequest pr)
    {
        var settings = await UserSettings.GetAsync<TeamMembersVelocitySettings>();

        if (settings.Organisation != null)
        {
            var (comments, error) = await GitService.GetComments(
                                settings.Organisation, pr.Repository.Id, pr.PullRequestId);

            Comments = comments?.Value;
            Error = error;
        }
    }
}
